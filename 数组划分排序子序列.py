'''
牛牛定义排序子序列为一个数组中一段连续的子序列,并且这段子序列是非递增或者非递减排序的。
牛牛有一个长度为n的整数数组A,他现在有一个任务是把数组A分为若干段排序子序列,牛牛想知道他最少可以把这个数组分为几段排序子序列. 
如样例所示,牛牛可以把数组A划分为[1,2,3]和[2,2,1]两个排序子序列,至少需要划分为2个排序子序列,所以输出2

一开始还自作聪明的用上升下降沿来做，但是这种方法很有问题，比如1212121这种情况，就是大大的bug。
其实就直接求对递增，递减的情况计数就行。
最后注意，最后一个数的情况。
'''
n = [1,2,1,2,1,2,1,2]
l = len(n)
c = 0
i = 0
while(i < l - 1):
    while i < l - 1 and n[i] == n[i + 1]:
        i += 1
    if i < l - 1 and n[i] > n[i + 1]:
        c += 1
        while i < l - 1 and n[i] > n[i + 1]:
            i += 1
    elif i < l - 1 and n[i] < n[i + 1]:
        c += 1
        while i < l - 1 and n[i] < n[i + 1]:
            i += 1
    i += 1
if i == l - 1:
    c += 1
print("res: ", c)
